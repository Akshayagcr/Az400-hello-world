# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '73185f31-4dff-4e3a-807a-aae20154736d'
  imageRepository: 'akshaysuccessv1'
  containerRegistry: 'akshayagcr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'


pool:
  vmImage: ubuntu-latest

jobs:
  - job: buildArtifact
    steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenVersionOption: 'Default'
          mavenOptions: '-Xmx3072m'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
      - task: CopyFiles@2
        inputs:
          Contents: |
            **/target/app.jar
            **/target/applicationinsights.json
            **/target/applicationinsights-agent.jar
            **/target/Dockerfile
          TargetFolder: '$(build.artifactstagingdirectory)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'

  - job: buildImage
    dependsOn: buildArtifact
    condition: succeeded()
    steps:
      - task: DownloadBuildArtifacts@1
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          itemPattern: '*/*/*'
          downloadPath: '$(System.DefaultWorkingDirectory)'
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/drop/target/'
          Contents: '**'
          TargetFolder: '$(System.DefaultWorkingDirectory)'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            # Write your commands here
            
            echo '***** System.DefaultWorkingDirectory *****'
            ls
          workingDirectory: '$(System.DefaultWorkingDirectory)'
      
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          containerRegistry: '$(dockerRegistryServiceConnection)'
          repository: '$(imageRepository)'
          command: 'buildAndPush'
          Dockerfile: '$(System.DefaultWorkingDirectory)/Dockerfile'
          tags: '$(tag)'
  - job: deployImage
    dependsOn: buildImage
    condition: succeeded()
    steps:
      # used below commands in azure cloud shell to grant permissions to the web app to ACR
      # As from pipeline it was showing following error
      #
      # ERROR: The client '51d25d63-31a0-4a83-b6e4-6d81c6156204' with object id '51d25d63-31a0-4a83-b6e4-6d81c6156204' does not have authorization to perform action 'Microsoft.Authorization/roleAssignments/write' over scope '/subscriptions/bf20aa44-1fd9-4409-9be0-4dd23e8b9346/resourceGroups/Test-Rg/providers/Microsoft.ContainerRegistry/registries/akshayagcr/providers/Microsoft.Authorization/roleAssignments/fc4ddcb9-017d-4c1d-a687-2af239010eb2' or the scope is invalid. If access was recently granted, please refresh your credentials.
      #
      # **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
      # - task: AzureCLI@2
      #   inputs:
      #     azureSubscription: 'Azure Pass - Sponsorship(bf20aa44-1fd9-4409-9be0-4dd23e8b9346)'
      #     scriptType: 'bash'
      #     scriptLocation: 'inlineScript'
      #     inlineScript: |
      #       SUBSCRIPTION_ID=bf20aa44-1fd9-4409-9be0-4dd23e8b9346
            
      #       PRINCIPAL_ID=bd63aded-7170-417d-8a9b-19655ca4d5a0

      #       RESOURCE_GROUP=Test-Rg
            
      #       az role assignment create --assignee $PRINCIPAL_ID --scope /subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.ContainerRegistry/registries/akshayagcr --role "AcrPull"
            
      #       az resource update --ids /subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.Web/sites/akshayagcr/config/web --set properties.acrUseManagedIdentityCreds=True
      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Azure Pass - Sponsorship(bf20aa44-1fd9-4409-9be0-4dd23e8b9346)'
          appType: 'webAppContainer'
          WebAppName: 'akshayagcr'
          DockerNamespace: 'akshayagcr.azurecr.io'
          DockerRepository: 'akshaysuccessv1'
          DockerImageTag: '$(Build.BuildId)'
          AppSettings: '-WEBSITES_PORT 8080'

  
